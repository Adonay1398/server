# Generated by Django 5.1.3 on 2024-12-21 21:55

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('cve_carrera', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cuestionario',
            fields=[
                ('cve_cuestionario', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_corto', models.CharField(max_length=255, unique=True)),
                ('nombre_largo', models.CharField(max_length=255)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('completado', models.BooleanField(default=False)),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('cve_depto', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('jefe', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Indicador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Instituto',
            fields=[
                ('cve_inst', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_completo', models.CharField(max_length=255, unique=True)),
                ('tipo', models.CharField(choices=[('federal', 'Federal'), ('rural', 'Rural'), ('estatal', 'Estatal')], default='federal', max_length=10)),
                ('ruta', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('cve_region', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=255, unique=True)),
                ('jefe', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TipoRespuesta',
            fields=[
                ('cve_respuesta', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DatosAplicacion',
            fields=[
                ('cve_aplic', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField()),
                ('hora', models.TimeField()),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('cuestionario', models.ManyToManyField(related_name='aplicaciones', to='api.cuestionario')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions_set', to='auth.permission', verbose_name='user permissions')),
                ('carrera', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.carrera')),
                ('aplicacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.datosaplicacion')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='carrera',
            name='departamento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carreras', to='api.departamento'),
        ),
        migrations.CreateModel(
            name='GrupoJerarquico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('nacional', 'Nivel Nacional'), ('region', 'Nivel Región'), ('institucion', 'Nivel Institución'), ('departamento', 'Nivel Departamento'), ('plan_estudios', 'Nivel Plan de Estudios'), ('tutores', 'Nivel Tutores')], max_length=50)),
                ('grupo', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jerarquia', to='auth.group')),
                ('parent_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subgrupos', to='auth.group')),
            ],
        ),
        migrations.CreateModel(
            name='Constructo',
            fields=[
                ('cve_const', models.AutoField(primary_key=True, serialize=False)),
                ('descripcion', models.TextField(unique=True)),
                ('signo', models.CharField(max_length=10)),
                ('acronimo', models.CharField(default='DEFAULT', max_length=10)),
                ('indicador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
            ],
        ),
        migrations.CreateModel(
            name='IndicadorConstructo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('constructo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.constructo')),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
            ],
        ),
        migrations.AddField(
            model_name='indicador',
            name='constructos',
            field=models.ManyToManyField(related_name='indicadores_set', through='api.IndicadorConstructo', to='api.constructo'),
        ),
        migrations.AddField(
            model_name='departamento',
            name='instituto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departamentos', to='api.instituto'),
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id_pregunta', models.AutoField(primary_key=True, serialize=False)),
                ('cve_pregunta', models.CharField(max_length=255, unique=True)),
                ('texto_pregunta', models.TextField()),
                ('scorekey', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), blank=True, default=list, size=None)),
                ('is_value', models.BooleanField(default=False)),
                ('cuestionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='api.cuestionario')),
                ('cve_const1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preguntas_const1', to='api.constructo')),
                ('cve_const2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preguntas_const2', to='api.constructo')),
                ('cve_const3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preguntas_const3', to='api.constructo')),
                ('cve_const4', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preguntas_const4', to='api.constructo')),
            ],
        ),
        migrations.AddField(
            model_name='instituto',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='institutos', to='api.region'),
        ),
        migrations.CreateModel(
            name='Reporte',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nivel', models.CharField(max_length=5)),
                ('referencia_id', models.IntegerField(blank=True, null=True)),
                ('texto_fortalezas', models.TextField(blank=True, null=True)),
                ('texto_oportunidades', models.TextField(blank=True, null=True)),
                ('fecha_generacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('observaciones', models.TextField(blank=True, null=True)),
                ('usuario_generador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('cve_resp', models.AutoField(primary_key=True, serialize=False)),
                ('valor', models.IntegerField()),
                ('cve_aplic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.datosaplicacion')),
                ('pregunta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pregunta')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RetroChatGPT',
            fields=[
                ('cve_retro', models.AutoField(primary_key=True, serialize=False)),
                ('texto1', models.TextField()),
                ('texto2', models.TextField(blank=True, null=True)),
                ('texto3', models.TextField(blank=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='pdf_files/')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreAplicacion',
            fields=[
                ('cve_score', models.AutoField(primary_key=True, serialize=False)),
                ('total', models.FloatField()),
                ('cve_aplic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.datosaplicacion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreConstructo',
            fields=[
                ('cve_scoreConstructo', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('aplicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.datosaplicacion')),
                ('constructo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.constructo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreIndicador',
            fields=[
                ('cve_ScoreIndicador', models.AutoField(primary_key=True, serialize=False)),
                ('score', models.IntegerField()),
                ('aplicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.datosaplicacion')),
                ('constructos', models.ManyToManyField(blank=True, related_name='indicadores', to='api.scoreconstructo')),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AsignacionCuestionario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completado', models.BooleanField(default=False)),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to=settings.AUTH_USER_MODEL)),
                ('cuestionario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='api.cuestionario')),
                ('aplicacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='api.datosaplicacion')),
            ],
            options={
                'unique_together': {('usuario', 'cuestionario', 'aplicacion')},
            },
        ),
        migrations.CreateModel(
            name='IndicadorPromedio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nivel', models.CharField(choices=[('plan_estudios', 'Carrera'), ('departamento', 'Departamento'), ('instituto', 'Instituto'), ('region', 'Región'), ('nacion', 'Nación')], max_length=20)),
                ('promedio', models.FloatField()),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth.group')),
                ('indicador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.indicador')),
            ],
            options={
                'unique_together': {('nivel', 'grupo', 'indicador')},
            },
        ),
    ]
